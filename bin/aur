#!/usr/bin/env ruby
# frozen_string_literal: true

require 'docopt'
require 'pathname'
require 'io/console'
require_relative '../lib/aur/action'

CMDS = %i[
  albumdisc
  artfix
  copytags
  dupes
  flac2mp3
  get
  help
  info
  inumber
  itag
  lint
  lintdir
  ls
  mp3dir
  namecheck
  name2num
  name2tag
  num2name
  reencode
  renumber
  retag
  retitle
  set
  sort
  split
  strip
  syncflac
  tag2name
  tagconv
  tagsub
  thes
  transcode
  verify
  wantflac
].freeze

docopt = <<~EOCMDS
  Usage:
    aur set [-q] <tag> <value> <file>...
    aur tag2name <file>...
    aur name2tag [-N] <file>...
    aur num2name <file>...
    aur name2num <file>...
    aur retitle [-aAnNS] <file>...
    aur tagsub <tag> <find> <replace> <file>...
    aur retag [-f] <file>...
    aur inumber <file>...
    aur itag <tag> <file>...
    aur strip <file>...
    aur renumber (up|down) <number> <file>...
    aur split <file>...
    aur info <file>...
    aur ls [-r] [-d string] [<directory>]...
    aur get <fields> <file>...
    aur sort <file>...
    aur verify <file>...
    aur flac2mp3 <file>...
    aur mp3dir [-rf] <directory>...
    aur syncflac [-D]
    aur wantflac [-T]
    aur transcode <newtype> <file>...
    aur reencode <file>...
    aur tagconv [-N] <file>...
    aur copytags [-fmN] <file>...
    aur lint [-st] <file>...
    aur lintdir [-r] <directory>...
    aur artfix [-n] <directory>...
    aur albumdisc <file>...
    aur thes <file>...
    aur dupes
    aur namecheck <directory>...
    aur help <command>

  Options:
    -a, --all           operate on all applicable properties
    -A, --album         work on the album title, not the track title
    -n, --noop          don't perform the requested operation
    -q, --quiet         don't print non-warning/error messages
    -r, --recursive     operate recursively
    -s, --summary       summarise results
    -S, --artist        work on the track artist only
    -d, --delim STRING  machine-parseable output with given delimeter
    -t, --strict        compare actual to expected tags
    -T, --tracks        single tracks only
    -f, --force         overwrite any existing files
    -m, --forcemod      modify MP3 tags if corresponding FLAC has a newer mtime
    -N, --novalidate    don't validate tags
    -D, --deep          synchronize contents of all FLAC directories
EOCMDS

def sanitize_keys(options)
  options.transform_keys { |k| k.to_s.delete('-').to_sym }
end

def errors(errs)
  return if errs.empty?

  errs = errs.sort.uniq

  warn "Completed with #{errs.size} errors."
  errs.each { |err| warn "  #{err}" }
  exit 1
end

begin
  tw = IO.console.winsize.last
  raise StandardError if tw < 60
rescue StandardError
  tw = 80
ensure
  TW = tw
end

begin
  opts = sanitize_keys(Docopt.docopt(docopt))
rescue Docopt::Exit => e
  abort e.message
end

CMDS.each do |cmd|
  next unless opts[cmd]

  if cmd == :help
    require_relative '../lib/aur/commands/help'
    Aur::Command::Help.new(opts[:'<command>'])
  else
    cmd = Aur::Action.new(cmd, opts[:'<file>'], opts)
    cmd.run!
    errors(cmd.errs) unless cmd&.no_error_report
  end

  exit
end

abort 'Unhandled command.'
